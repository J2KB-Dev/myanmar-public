{"version":3,"sources":["components/atoms/Background.tsx","components/atoms/Button/OffsetButton.tsx","components/atoms/Container/Container.tsx","components/atoms/Container/SmallContainer.tsx","components/atoms/hooks/useWindowDimensions.js","components/atoms/SimpleBar.tsx","components/atoms/Typography.tsx","components/screens/FirstPage.tsx","components/svgpath/path.ts","components/atoms/ProgressBar.tsx","components/atoms/Button/BackButton.tsx","components/template/SelectPage.tsx","components/atoms/ImageGrid.tsx","components/screens/SecondPage.tsx","components/screens/ThirdPage.tsx","components/screens/FourthPage.tsx","components/atoms/Button/Button.tsx","components/screens/FifthPage.tsx","components/atoms/Button/OffsetIconButton.tsx","components/atoms/NewCanvasImage.js","components/screens/ResultPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","styled","div","props","main","defaultProps","styles","css","width","height","OffsetButtonStyles","button","OffsetLinkStyles","Link","OffsetHrefLinkStyles","a","OffsetButton","content","disabled","onClick","OffsetLinkButton","link","toString","includes","href","target","to","Container","section","offset","SmallContainer","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","SimpleBar","TypographyStyles","color","size","scale","Typography","FirstPage","TitleContainer","src","style","pointerEvents","alt","paddingTop","marginBottom","display","marginLeft","margin","progress","keyframes","animation","WrapperStyles","FillStyles","animated","ImgStyles","img","ProgressBar","ButtonStyles","BackButton","first","backLink","SelectPage","children","backButton","contentNumber","title1","title2","buttonContent","buttonLink","Header","Subtitle","TextBox","className","SelectBoxWrapper","SelectBox","header","ImageGrid","threeRows","cols","options","value","selected","map","fileName","indexOf","slice","option","index","GridStyles","TextStyles","description","FEEL_ARRAY","SecondPage","finalImage","setImage","firstFile","SelectOption","setSelectOption","e","currentTarget","HAIR_ARRAY","ThirdPage","secondFile","EQUIPMENT_ARRAY","FourthPage","thirdFile","length","Button","fontSize","transparent","NormalButtonStyles","SelectButton","initialText","selectButtonStyle","background","SelectButtonStyles","FifthPage","resultText","SelectedText","setSelecedText","onSelectText","BUTTON_ARRAY","TextList","text","ul","icon","OffsetIconButton","id","NewCanvasImage","Uri","setUri","AddImages","srcs","layer","Promise","resolve","reject","shift","path","imageObj","Image","onload","part","Konva","image","preventDefault","add","setTimeout","getCanvas","toDataURL","onerror","res","stage","Stage","container","Layer","fetchMyData","confirm","document","createElement","download","body","appendChild","click","removeChild","hidden","MyAlert","withReactContent","Swal","shareText","shareSubText","shareUrl","ResultPage","Loading","setLoading","imgArr","filter","history","pushState","location","onpopstate","go","Kakao","isInitialized","init","process","forEach","createDefaultButton","objectType","title","imageUrl","mobileWebUrl","webUrl","buttons","LoadingComponent","ContentsWrapper","ImagePencil","Message","ResultComponent","marginTop","temp","select","execCommand","fire","timer","showConfirmButton","timerProgressBar","backdrop","customClass","popup","IconContainer","open","maxWidth","Credit","textAlign","p","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ee6804a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 뒤쪽에 표시되는 백그라운드\r\n *\r\n * @param main : 메인화면 여부\r\n */\r\n\r\ninterface BackgroundProps {\r\n  main?: boolean;\r\n}\r\nexport const Background = styled.div<BackgroundProps>`\r\n  & {\r\n    width: 100%;\r\n    max-width: 410px;\r\n    min-width: 280px;\r\n    min-height: 100vh;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    position: relative;\r\n    margin: 0 auto;\r\n  }\r\n  &:after {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url(../../images/background/${(props: BackgroundProps) =>\r\n      props.main ? \"first.png\" : \"background.png\"});\r\n    background-size: contain;\r\n    background-position: bottom;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -2;\r\n  }\r\n`;\r\n\r\n// default Props\r\nBackground.defaultProps = {\r\n  main: false,\r\n};\r\n","import { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport * as H from \"history\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 함수 버튼일 경우 OffsetButton\r\n *          링크 버튼일 경우 OffsetLinkButton\r\n *\r\n * @param content : 버튼에 들어갈 내용, optional, 기본값 공백\r\n * @param width : 너비, optional, 기본값 279\r\n * @param height: 높이, optional, 기본값 54\r\n * @param disabled: 비활성화 여부, optional\r\n *\r\n * @param onClick : 함수 버튼일 경우\r\n *\r\n * @param link : 링크 버튼일 경우 호출될 링크\r\n */\r\ninterface DefaultProps {\r\n  content?: string;\r\n  width?: number;\r\n  height?: number;\r\n  disabled?: boolean;\r\n}\r\ninterface ButtonProps extends DefaultProps {\r\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\ninterface LinkButtonProps<S = H.LocationState> extends DefaultProps {\r\n  link:\r\n    | H.LocationDescriptor<S>\r\n    | ((location: H.Location<S>) => H.LocationDescriptor<S>);\r\n}\r\n\r\nconst styles = (props: DefaultProps) => css`\r\n  & {\r\n    width: ${props.width}px;\r\n    max-width: 95%;\r\n    background: transparent;\r\n    height: ${props.height}px;\r\n    border-radius: ${props.height ? props.height / 2 : 0}px;\r\n    border: none;\r\n    cursor: pointer;\r\n    position: relative;\r\n    color: white;\r\n    font-size: 20px;\r\n    margin: 5px;\r\n    font-family: Malssami815;\r\n    z-index: 1;\r\n  }\r\n  &:after,\r\n  &:before {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: ${props.height ? props.height / 2 : 0}px;\r\n    position: absolute;\r\n  }\r\n  &:after {\r\n    border: 2px solid black;\r\n    box-sizing: border-box;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n  }\r\n  &:before {\r\n    background-color: #d35e43;\r\n    top: 5px;\r\n    left: 4px;\r\n    z-index: -1;\r\n  }\r\n  &[disabled],\r\n  &[disabled]:before {\r\n    pointer-events: none;\r\n  }\r\n  &[disabled]:before {\r\n    background-color: #b1b1b1;\r\n  }\r\n`;\r\n\r\nconst OffsetButtonStyles = styled.button<DefaultProps>`\r\n  ${styles}\r\n`;\r\nconst OffsetLinkStyles = styled(Link)<DefaultProps>`\r\n  ${styles}\r\n  & {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n  }\r\n`;\r\nconst OffsetHrefLinkStyles = styled.a<DefaultProps>`\r\n  ${styles}\r\n  & {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const OffsetButton: FunctionComponent<ButtonProps> = ({\r\n  content,\r\n  width,\r\n  height,\r\n  disabled,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <OffsetButtonStyles\r\n      width={width}\r\n      height={height}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {content}\r\n    </OffsetButtonStyles>\r\n  );\r\n};\r\n\r\nexport const OffsetLinkButton: FunctionComponent<LinkButtonProps> = ({\r\n  content,\r\n  width,\r\n  height,\r\n  disabled,\r\n  link,\r\n}) => {\r\n  if (link.toString().includes(\"http\")) {\r\n    return (\r\n      <OffsetHrefLinkStyles\r\n        width={width}\r\n        height={height}\r\n        href={link.toString()}\r\n        target=\"_blank\"\r\n        disabled={disabled}\r\n      >\r\n        {content}\r\n      </OffsetHrefLinkStyles>\r\n    );\r\n  } else {\r\n    return (\r\n      <OffsetLinkStyles\r\n        width={width}\r\n        height={height}\r\n        to={link}\r\n        disabled={disabled}\r\n      >\r\n        {content}\r\n      </OffsetLinkStyles>\r\n    );\r\n  }\r\n};\r\n\r\n// default Props\r\nOffsetButton.defaultProps = {\r\n  width: 279,\r\n  height: 54,\r\n  content: \"\",\r\n  disabled: false,\r\n};\r\nOffsetLinkButton.defaultProps = {\r\n  width: 279,\r\n  height: 54,\r\n  content: \"\",\r\n  link: \"/\",\r\n  disabled: false,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 페이지 내용이 들어가는 컨테이너\r\n *\r\n * @param width : 너비, optional, 기본값 300\r\n * @param height : 높이, optional, 기본값 800\r\n * @param offset : 오프셋 여부, 기본값 false\r\n */\r\ninterface ContainerProps {\r\n  width?: number;\r\n  height?: number;\r\n  offset?: boolean;\r\n}\r\n\r\nconst styles = (props: ContainerProps) => css`\r\n  & {\r\n    width: ${props.width}px;\r\n    max-width: 95%;\r\n    min-height: ${props.height}px;\r\n    border: 2px solid #000000;\r\n    border-radius: 28px 28px 0px 0px;\r\n    background-color: ${!props.offset\r\n      ? \"transparent\"\r\n      : \"rgba(255, 255, 255, 0.5)\"};\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    box-sizing: border-box;\r\n    padding-bottom: 30px;\r\n    padding-top: 35px;\r\n    margin: 10px auto;\r\n  }\r\n  &:after {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 2px solid #000000;\r\n    border-radius: 28px 28px 0px 0px;\r\n    position: absolute;\r\n    top: -5px;\r\n    left: 4px;\r\n    z-index: -1;\r\n    ${!props.offset ? \"display: none;\" : null}\r\n  }\r\n`;\r\n\r\nexport const Container = styled.section<ContainerProps>`\r\n  ${styles}\r\n`;\r\n\r\n// default Props\r\nContainer.defaultProps = {\r\n  width: 390,\r\n  height: 800,\r\n  offset: false,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 첫 화면에 들어가는 작은 컨테이너\r\n */\r\nexport const SmallContainer = styled.div`\r\n  & {\r\n    width: 95%;\r\n    min-height: 380px;\r\n    border: 1px solid #000000;\r\n    border-radius: 14px 14px 0px 0px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    box-sizing: border-box;\r\n    padding-bottom: 30px;\r\n    padding-top: 35px;\r\n    margin: 5px auto;\r\n\r\n    font-size: 13px;\r\n    font-weight: 600;\r\n    line-height: 18px;\r\n    text-align: center;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// 윈도우 창 크기를 알려 주는 hooks\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 얇은 검은색 막대\r\n */\r\nexport const SimpleBar = styled.div`\r\n  & {\r\n    width: 331px;\r\n    max-width: 95%;\r\n    height: 3px;\r\n    background-color: black;\r\n    margin: 10px;\r\n  }\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 말싸미 글씨 표시하는 컴포넌트\r\n *\r\n * @param size : 폰트 크기\r\n * @param scale : 확대 축소 비율\r\n * @param content : 들어갈 내용, optional, 기본값 테스트\r\n * @param offset: 오프셋 여부, optional, 기본값 false\r\n * @param color: 앞쪽에 나올 색상, optional, 기본값 white\r\n */\r\ninterface TextProps {\r\n  size: number;\r\n  scale: number;\r\n  content?: string;\r\n  offset?: boolean;\r\n  color?: string;\r\n}\r\n\r\nconst styles = (props: TextProps) => css`\r\n  & {\r\n    background: transparent;\r\n    position: relative;\r\n\r\n    ${props.offset ? \"display: block;\" : \"display:flex; align-items: flex-end;\"}\r\n    \r\n\r\n    color: ${props.color};\r\n    ${props.color === \"white\"\r\n      ? \"text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\"\r\n      : null}\r\n    font-size: ${props.size * props.scale}px;\r\n    font-family: Malssami815;\r\n    line-height: 100%;\r\n  }\r\n  &:after {\r\n    content: \"${props.content}\";\r\n    width: 100%;\r\n    height: 100%;\r\n    color: white;\r\n    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    left: 2px;\r\n    top: 2px;\r\n    font-size: ${props.size * props.scale}px;\r\n    font-family: Malssami815;\r\n    z-index: -1;\r\n    ${!props.offset ? \"display: none;\" : null}\r\n  }\r\n`;\r\n\r\nconst TypographyStyles = styled.div<TextProps>`\r\n  ${styles}\r\n`;\r\n\r\nexport const Typography: FunctionComponent<TextProps> = (props) => {\r\n  return <TypographyStyles {...props}>{props.content}</TypographyStyles>;\r\n};\r\n\r\n// default Props\r\nTypography.defaultProps = {\r\n  content: \"테스트\",\r\n  size: 20,\r\n  offset: false,\r\n  color: \"white\",\r\n  scale: window.innerWidth > 350 ? 1 : 0.8,\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Background } from \"../atoms/Background\";\r\nimport { OffsetLinkButton } from \"../atoms/Button/OffsetButton\";\r\nimport { Container } from \"../atoms/Container/Container\";\r\nimport { SmallContainer } from \"../atoms/Container/SmallContainer\";\r\nimport useWindowDimensions from \"../atoms/hooks/useWindowDimensions\";\r\nimport { SimpleBar } from \"../atoms/SimpleBar\";\r\nimport { Typography } from \"../atoms/Typography\";\r\n\r\nexport default function FirstPage() {\r\n  const { width } = useWindowDimensions();\r\n\r\n  const scale = width > 350 ? 1 : 0.8;\r\n\r\n  const TitleContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 331px;\r\n    height: 160px;\r\n    max-width: 95%;\r\n  `;\r\n\r\n  return (\r\n    <Background main>\r\n      <img\r\n        src=\"images/background/first-top.svg\"\r\n        style={{ pointerEvents: \"none\" }}\r\n        alt=\"위쪽 배경\"\r\n      />\r\n      <Container height={715} style={{ paddingTop: \"20px\" }}>\r\n        <SmallContainer style={{ marginBottom: 15 }}>\r\n          <Typography content=\"온라인 시위\" size={20} color=\"black\" scale={scale}/>\r\n          <SimpleBar style={{ marginBottom: 0 }} />\r\n          <TitleContainer>\r\n            <div style={{ display: \"flex\", marginBottom: 10}}>\r\n              <Typography\r\n                content=\"미얀마\"\r\n                size={60}\r\n                offset\r\n                color=\"black\"\r\n                scale={scale}\r\n              />\r\n              <Typography content=\"와 함께\" size={40} scale={scale} />\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n              <Typography\r\n                content=\"입을\"\r\n                size={40}\r\n                color=\"black\"\r\n                scale={scale}\r\n              />\r\n              <Typography\r\n                content=\"&nbsp;연대!\"\r\n                size={60}\r\n                offset\r\n                color=\"black\"\r\n                scale={scale}\r\n              />\r\n              <img\r\n                src=\"images/lines.svg\"\r\n                style={{ marginLeft: \"10px\" }}\r\n                alt=\"아이콘\"\r\n              />\r\n            </div>\r\n          </TitleContainer>\r\n          <SimpleBar style={{ margin: 0, marginBottom: 30 }} />\r\n          군부와 힘든 싸움을 이어가고 있는 미얀마 시민들.\r\n          <br />\r\n          그들이 필요로 하는 것은 우리의 지지와 관심입니다.\r\n          <br />\r\n          미얀마와 함께 입을 열고, 응원의 메시지를 전하세요.\r\n          <br />\r\n          온라인 시위에도 참여할 수 있어요.\r\n          <br />\r\n          미얀마에 따뜻한 연대의 목소리를 보여주세요.\r\n        </SmallContainer>\r\n        <OffsetLinkButton content=\"온라인 시위 참여하기\" link=\"/second\" />\r\n      </Container>\r\n    </Background>\r\n  );\r\n}\r\n","export const ProgressBarPath = `M53.9,25l-0.2-0.1c-0.9-0.3-2.4-0.5-3.7-0.7c-1.8-0.2-4-0.3-6.4-0.4c-4.9-0.1-11.2-0.1-17.1,0c-1.8,0-3.6,0.1-5.4,0.1\r\nc-1.8,0-3.6,0-5.3,0.1c-1.2,0-2.3,0-3.3,0.1c-1,0-1.9,0-2.7,0H0.3v-0.8c0-0.1-0.1-0.2-0.1-0.4c-0.1-0.6-0.1-1.2-0.1-2\r\nc0-1.4,0.3-3.5,0.9-6.2C1.7,12,2.3,9.9,2.9,8.3c0.2-0.7,0.5-1.3,0.8-1.8c0.1-0.2,0.2-0.4,0.3-0.6c0.2-0.5,0.4-0.8,0.6-1\r\nc0.1-0.1,0.1-0.2,0.1-0.2l0.2-0.3c0.5-0.5,1-0.6,1.5-0.8c0.6-0.1,1.2-0.1,2.1,0l0.4,0c0.5,0.1,1.7,0.2,3,0.2C13.3,4,15.4,4,17.5,4\r\nC22,4.1,27.8,4,33.4,3.9c10-0.1,20.6-0.3,24.4-0.4l0.8,0l0.2,0.1c0.2,0.1,0.4,0,0.4,0l0.2-0.1c0.2,0,0.3-0.1,0.4-0.2\r\nc0.1,0,0.2-0.1,0.3-0.1C60.3,3,60.7,2.9,61,2.9l227.2-3.7l0.1,0l0,0l0.5,0l0,1c0,0,0,0,0,0c0,0,0,0,0,0v0l0.4,0.9L289,1.2\r\nc0,0.2,0,0.5,0,0.7c0,0.6,0,1.4-0.1,2.2c-0.1,1.6-0.5,3.4-0.8,5.3l-0.3,1.2c-0.4,1.7-0.9,3.4-1.4,4.9c-0.5,1.5-1.3,3-1.9,3.9\r\nl-0.1,0.1c-0.2,0.2-0.7,0.7-1.5,0.9c-0.6,0.2-1.4,0.4-2.5,0.5c-2.1,0.2-4.7,0.3-7.3,0.2l-0.9,0c-5-0.1-11-0.2-16.6,0.6l0,0.1\r\nl-2,0.2l0-0.1c-19.3,0.4-29.3,0.5-45.7,0.6c-3,0.1-6.2,0.1-9.7,0.1l-10.6,1.1l-0.5,0.7l-0.8-0.6c0,0-0.1,0-0.1,0l-1,0.1l-0.1-0.5\r\nc-0.4,0-1.2,0.1-2.2,0.3c-1.9,0.4-3.9,0.7-5.8,0.2l-0.1,0.1l-0.7-0.4c-0.2-0.1-0.4-0.2-0.6-0.3c0,0-0.1,0-0.1,0l-0.2,0\r\nc-0.2,0-0.4-0.1-0.6-0.1c-0.3,0-0.5-0.1-0.8-0.1c-0.7-0.1-2.3-0.2-3.8-0.2c-1.5,0-2.9,0-4.1,0.1c-1.2,0.1-2.2,0.3-2.8,0.5l-0.4,0\r\nh-8.4c-1,0-2.2,0-3.3,0c-2.8-0.1-5.9-0.1-9.1-0.1c-1.8,0-3.6-0.1-5.5-0.1c-6.6-0.1-13.3-0.1-18.6,0c-2.7,0-5,0.1-6.8,0.3\r\nc-0.9,0.1-1.7,0.2-2.4,0.3c-0.5,0.1-0.9,0.2-1.3,0.3l-0.2,0.1l-0.2,0c-2.1-0.4-5.6-0.6-10.8-0.7c-4.4-0.1-9.8,0-16,0.2\r\nc-6.3,0.2-13.4,0.5-21.4,0.9c-0.9,0-1.8,0.1-2.6,0.1c-1,0-1.8,0.1-2.5,0.1L53.9,25z M61,3.9v1c0,0,0,0,0,0l0,0L61,3.9z M61.3,4.8L61.3,4.8C61.3,4.8,61.3,4.8,61.3,4.8z`;","import React, { FunctionComponent } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { ProgressBarPath } from \"../svgpath/path\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @param progress : 진행도 (Bar가 차는 비율 퍼센트?)\r\n * @param scale : 확대 축소 비율\r\n * @param animated : 애니메이션 여부, 기본값 false\r\n */\r\ninterface BarProps {\r\n  progress?: number;\r\n  scale?: number;\r\n  animated?: boolean;\r\n}\r\n\r\nconst progress = keyframes` \r\n    from { \r\n        width: 0%; \r\n    } \r\n    to { \r\n        width: 100%; \r\n    }\r\n`;\r\nconst animation = css`\r\n  ${progress} 5s ease-out;\r\n`;\r\n\r\nconst WrapperStyles = styled.div<BarProps>`\r\n  & {\r\n    width: 289px;\r\n    height: 25px;\r\n    position: relative;\r\n    transform: scale(${(props: BarProps) => props.scale});\r\n  }\r\n`;\r\n\r\nconst FillStyles = styled.div<BarProps>`\r\n  & {\r\n    width: ${(props: BarProps) => (props.animated ? 100 : props.progress)}%;\r\n    height: 25px;\r\n    background-color: #d35e43;\r\n    clip-path: path(\"${ProgressBarPath}\");\r\n    position: absolute;\r\n    transition: 0.3s all;\r\n    animation: ${(props: BarProps) => (props.animated ? animation : \"none;\")};\r\n  }\r\n`;\r\n\r\nconst ImgStyles = styled.img`\r\n  & {\r\n    width: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nexport const ProgressBar: FunctionComponent<BarProps> = (props) => {\r\n  return (\r\n    <WrapperStyles {...props}>\r\n      <FillStyles {...props} />\r\n      <ImgStyles src=\"../../../images/topbox.svg\" alt=\"bar-border\" />\r\n    </WrapperStyles>\r\n  );\r\n};\r\n\r\n// default Props\r\nProgressBar.defaultProps = {\r\n  progress: 100,\r\n  scale: window.innerWidth > 300 ? 1 : 0.8,\r\n  animated: false,\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport * as H from \"history\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 뒤로 가는 링크 버튼\r\n *\r\n * @param content : 백 버튼 다음에 들어갈 글자\r\n * @param first : 첫 페이지에 사용되는 컴포넌트는 버튼이 표시되지 않음\r\n * @param backLink : 링크 경로\r\n */\r\ninterface ButtonProps<S = H.LocationState> {\r\n  content: string;\r\n  first: boolean;\r\n  backLink:\r\n    | H.LocationDescriptor<S>\r\n    | ((location: H.Location<S>) => H.LocationDescriptor<S>);\r\n}\r\n\r\nconst WrapperStyles = styled.div`\r\n  & {\r\n    display: flex;\r\n    width: 150px;\r\n    height: 33px;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    h1 {\r\n      padding: 0;\r\n      margin: 0;\r\n      font-size: 33px;\r\n      font-weight: 700;\r\n      text-align: center;\r\n      color: #d35e43;\r\n    }\r\n\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst ButtonStyles = styled(Link)`\r\n  & {\r\n    min-width: 25px;\r\n    height: 100%;\r\n    margin-right: 3px;\r\n    background: url(../../images/back.svg) no-repeat;\r\n    background-position: center;\r\n  }\r\n`;\r\n\r\nexport const BackButton: FunctionComponent<ButtonProps> = ({\r\n  first,\r\n  content,\r\n  backLink,\r\n}) => {\r\n  return (\r\n    <WrapperStyles>\r\n      {first === true ? null : <ButtonStyles to={backLink} />}\r\n      <img\r\n        src={`../../images/font/mapssi/${content}.svg`}\r\n        width={88}\r\n        alt={content}\r\n      />\r\n    </WrapperStyles>\r\n  );\r\n};\r\n\r\n// default Props\r\nBackButton.defaultProps = {\r\n  content: \"Q1\",\r\n  first: false,\r\n  backLink: \"/\",\r\n};\r\n","import { ReactNode } from \"react\";\r\nimport { ProgressBar } from \"../atoms/ProgressBar\";\r\nimport { Container } from \"../atoms/Container/Container\";\r\nimport { BackButton } from \"../atoms/Button/BackButton\";\r\nimport { Background } from \"../atoms/Background\";\r\nimport { OffsetLinkButton } from \"../atoms/Button/OffsetButton\";\r\nimport styled from \"styled-components\";\r\nimport * as H from \"history\";\r\n\r\ninterface SelectPageProps<S = H.LocationState> {\r\n  children: ReactNode;\r\n  progress: number | undefined;\r\n  backButton?:\r\n    | H.LocationDescriptor<S>\r\n    | ((location: H.Location<S>) => H.LocationDescriptor<S>);\r\n  first: boolean;\r\n  contentNumber?: string;\r\n  title1: string;\r\n  title2: string;\r\n  buttonContent: string;\r\n  buttonLink: string;\r\n  disabled: boolean;\r\n}\r\nexport function SelectPage({\r\n  children,\r\n  progress,\r\n  backButton = \"\",\r\n  first,\r\n  contentNumber = \"\",\r\n  title1,\r\n  title2,\r\n  buttonContent,\r\n  buttonLink,\r\n  disabled,\r\n}: SelectPageProps) {\r\n  return (\r\n    <Background>\r\n      <Header>\r\n        <h2>함께 입을 연대</h2>\r\n      </Header>\r\n      <Container offset>\r\n        <ProgressBar progress={progress} />\r\n\r\n        <Subtitle>\r\n          <BackButton\r\n            first={first}\r\n            content={contentNumber}\r\n            backLink={backButton}\r\n          />\r\n          <TextBox>\r\n            <h1 className=\"first_line\">{title1}</h1>\r\n            <h1 className=\"second_line\">{title2}</h1>\r\n          </TextBox>\r\n        </Subtitle>\r\n\r\n        <SelectBoxWrapper>\r\n          <SelectBox>{children}</SelectBox>\r\n        </SelectBoxWrapper>\r\n\r\n        <OffsetLinkButton\r\n          content={buttonContent}\r\n          link={buttonLink}\r\n          disabled={disabled}\r\n        />\r\n      </Container>\r\n    </Background>\r\n  );\r\n}\r\n\r\nconst Header = styled.header`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  h2 {\r\n    font-family: Malssami815;\r\n    padding: 8px 0;\r\n  }\r\n`;\r\n\r\nconst Subtitle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  margin-top: 20px;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    padding: 0;\r\n    text-align: center;\r\n  }\r\n\r\n  .first_line {\r\n    font-size: 1.2rem;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .second_line {\r\n    font-size: 1.3rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst SelectBoxWrapper = styled.div`\r\n  width: 100%;\r\n  height: 400px;\r\n  margin: 20px 0 10px 0;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SelectBox = styled.div`\r\n  width: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 이미지 선택하는 그리드\r\n *\r\n * @param fileName : 이미지 파일명\r\n * @param description : 이미지 아래에 들어갈 설명\r\n *\r\n * @param rows : 행 개수\r\n * @param cols : 열 개수\r\n * @param onClick\r\n * @param selected : 선택된 항목의 번호\r\n * @param value : 선택된 항목의 번호\r\n * @param options : 그리드에 들어갈 옵션들\r\n */\r\ntype ImageOptions = {\r\n  fileName?: string;\r\n  description?: string;\r\n};\r\ninterface GridProps {\r\n  threeRows: boolean;\r\n  cols: number;\r\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  selected?: number;\r\n  value?: string;\r\n  options?: Array<ImageOptions>;\r\n}\r\ninterface TextProps {\r\n  cols: number;\r\n}\r\n\r\nexport const ImageGrid: FunctionComponent<GridProps> = ({\r\n  threeRows,\r\n  cols,\r\n  onClick,\r\n  options,\r\n  value,\r\n}) => {\r\n  const selected = options\r\n    ? options.map((a) => a.fileName).indexOf(value) + 1\r\n    : 0;\r\n\r\n  return (\r\n    <WrapperStyles\r\n      threeRows={threeRows}\r\n      cols={cols}\r\n      selected={selected}\r\n      value={value}\r\n    >\r\n      {options\r\n        ? options.slice(0).map((option: ImageOptions, index) => (\r\n            <GridStyles\r\n              key={index}\r\n              onClick={onClick}\r\n              threeRows={threeRows}\r\n              cols={cols}\r\n              value={option.fileName}\r\n            >\r\n              <TextStyles cols={cols}>{option.description}</TextStyles>\r\n            </GridStyles>\r\n          ))\r\n        : null}\r\n    </WrapperStyles>\r\n  );\r\n};\r\n\r\nconst WrapperStyles = styled.div<GridProps>`\r\n  & {\r\n    width: 90%;\r\n    max-width: 310px;\r\n    min-height: 250px;\r\n    display: grid;\r\n    grid-template-columns: repeat(\r\n      ${(props: GridProps) => props.cols},\r\n      ${(props: GridProps) => 100 / props.cols}%\r\n    );\r\n    grid-template-rows: ${(props: GridProps) =>\r\n      props.threeRows ? \"93px 120px 115px\" : \"125px 125px\"};\r\n    margin: 20px;\r\n  }\r\n  & button:nth-child(${(props: GridProps) => props.selected}):before {\r\n    content: \"\";\r\n    background: url(images/check.svg) no-repeat;\r\n    width: 20px;\r\n    height: 18px;\r\n    position: absolute;\r\n    right: 6px;\r\n    ${(props: GridProps) => (props.threeRows ? \"bottom : 14%\" : \"top : 8%\")};\r\n    z-index: 2;\r\n  }\r\n`;\r\n\r\nconst GridStyles = styled.button<GridProps>`\r\n  & {\r\n    all: unset;\r\n    min-height: 90px;\r\n    border-right: 1px solid rgba(0, 0, 0, 0.28);\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.28);\r\n    background: url(images/character/${(props: GridProps) => props.value}.svg)\r\n      no-repeat;\r\n    background-position: center\r\n      ${(props: GridProps) => (props.threeRows ? \"45%\" : \"35%\")};\r\n    position: relative;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    padding: 5px;\r\n\r\n    font-size: 12px;\r\n    word-break: keep-all;\r\n  }\r\n  &:after {\r\n    content: \"\";\r\n    background: url(images/checkbox.svg) no-repeat;\r\n    width: 25px;\r\n    height: 25px;\r\n    position: absolute;\r\n    right: 5px;\r\n    ${(props: GridProps) => (props.threeRows ? \"bottom\" : \"top\")}: 8%;\r\n    z-index: 1;\r\n  }\r\n  &:nth-child(${(props: GridProps) => props.cols}n) {\r\n    border-right: none;\r\n  }\r\n  &:nth-child(n\r\n      + ${(props: GridProps) => props.cols * (props.threeRows ? 2 : 1) + 1}) {\r\n    border-bottom: none;\r\n  }\r\n  &:nth-child(n\r\n      + ${(props: GridProps) => props.cols * (props.threeRows ? 3 : 2) + 1}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst TextStyles = styled.div<TextProps>`\r\n  & {\r\n    position:absolute;\r\n    width: 100%;\r\n    bottom: ${(props: TextProps) => (props.cols === 3 ? \"10px\" : 0)};\r\n    left: 0;\r\n    min-height: 28px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { FinalImagePropsType } from \"../../types\";\r\nimport { SelectPage } from \"../template/SelectPage\";\r\nimport { ImageGrid } from \"../atoms/ImageGrid\";\r\n\r\nconst FEEL_ARRAY = [\r\n  { fileName: \"face-1\", description: \"안타까워요\" },\r\n  { fileName: \"face-2\", description: \"무섭고 놀랐어요\" },\r\n  { fileName: \"face-3\", description: \"화가 나요!\" },\r\n  { fileName: \"face-4\", description: \"마음이 아프고 진지해요\" },\r\n];\r\n\r\nexport default function SecondPage({\r\n  finalImage,\r\n  setImage,\r\n}: FinalImagePropsType) {\r\n  const [SelectOption, setSelectOption] = useState<string>(\r\n    finalImage.firstFile\r\n  );\r\n\r\n  const onSelectOption = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setSelectOption(e.currentTarget.value);\r\n    setImage({ ...finalImage, firstFile: e.currentTarget.value });\r\n  };\r\n\r\n  return (\r\n    <SelectPage\r\n      progress={20}\r\n      first\r\n      contentNumber={\"Q1\"}\r\n      title1={\"미얀마의 상황을 알게 된 당신,\"}\r\n      title2={\"어떤 기분이신가요?\"}\r\n      buttonContent={\"다음으로\"}\r\n      buttonLink={\"/third\"}\r\n      disabled={!SelectOption.includes(\"face\")}\r\n    >\r\n      <ImageGrid\r\n        threeRows={false}\r\n        cols={2}\r\n        options={FEEL_ARRAY}\r\n        value={SelectOption}\r\n        onClick={onSelectOption}\r\n      />\r\n    </SelectPage>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FinalImagePropsType } from \"../../types\";\r\nimport { SelectPage } from \"../template/SelectPage\";\r\nimport { ImageGrid } from \"../atoms/ImageGrid\";\r\n\r\nconst HAIR_ARRAY = [\r\n  { fileName: \"hair-1\" },\r\n  { fileName: \"hair-2\" },\r\n  { fileName: \"hair-3\" },\r\n  { fileName: \"hair-4\" },\r\n  { fileName: \"hair-5\" },\r\n  { fileName: \"hair-6\" },\r\n  { fileName: \"hair-7\" },\r\n  { fileName: \"hair-8\" },\r\n  { fileName: \"hair-9\" },\r\n];\r\n\r\nexport default function ThirdPage({\r\n  finalImage,\r\n  setImage,\r\n}: FinalImagePropsType) {\r\n  const [SelectOption, setSelectOption] = useState<string>(\r\n    finalImage.secondFile\r\n  );\r\n\r\n  const onSelectOption = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setSelectOption(e.currentTarget.value);\r\n    setImage({ ...finalImage, secondFile: e.currentTarget.value });\r\n  };\r\n\r\n  return (\r\n    <SelectPage\r\n      progress={40}\r\n      first={false}\r\n      contentNumber={\"Q2\"}\r\n      title1={\"당신을 표현할 수 있는\"}\r\n      title2={\"헤어스타일을 골라주세요\"}\r\n      buttonContent={\"다음으로\"}\r\n      buttonLink={\"/fourth\"}\r\n      backButton={\"/second\"}\r\n      disabled={!SelectOption.includes(\"hair\")}\r\n    >\r\n      <ImageGrid\r\n        threeRows={true}\r\n        cols={3}\r\n        options={HAIR_ARRAY}\r\n        value={SelectOption}\r\n        onClick={onSelectOption}\r\n      />\r\n    </SelectPage>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FinalImagePropsType } from \"../../types\";\r\nimport { SelectPage } from \"../template/SelectPage\";\r\nimport { ImageGrid } from \"../atoms/ImageGrid\";\r\n\r\nconst EQUIPMENT_ARRAY = [\r\n  { fileName: \"equip-1\", description: \"안경\" },\r\n  { fileName: \"equip-2\", description: \"최루탄을 막는 보안경\" },\r\n  { fileName: \"equip-3\", description: \"빨간 머리띠\" },\r\n  { fileName: \"equip-4\", description: \"총격을 막는 헬멧\" },\r\n  { fileName: \"equip-5\", description: \"머리를 보호하는 안전모\" },\r\n  { fileName: \"none\", description: \"선택하지 않고 넘어가기\" },\r\n];\r\n\r\nexport default function FourthPage({\r\n  finalImage,\r\n  setImage,\r\n}: FinalImagePropsType) {\r\n  const [SelectOption, setSelectOption] = useState<string>(\r\n    finalImage.thirdFile\r\n  );\r\n\r\n  const onSelectOption = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setSelectOption(e.currentTarget.value);\r\n    setImage({ ...finalImage, thirdFile: e.currentTarget.value });\r\n  };\r\n\r\n  return (\r\n    <SelectPage\r\n      progress={60}\r\n      first={false}\r\n      contentNumber={\"Q3\"}\r\n      title1={\"착용하고 싶은\"}\r\n      title2={\"악세사리를 골라주세요\"}\r\n      buttonContent={\"다음으로\"}\r\n      buttonLink={\"/fifth\"}\r\n      backButton={\"/third\"}\r\n      disabled={SelectOption.length<=0}\r\n    >\r\n      <ImageGrid\r\n        threeRows={false}\r\n        cols={3}\r\n        options={EQUIPMENT_ARRAY}\r\n        value={SelectOption}\r\n        onClick={onSelectOption}\r\n      />\r\n    </SelectPage>\r\n  );\r\n}\r\n","import { FunctionComponent } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 일반 버튼의 경우 Button\r\n *          선택 버튼의 경우 SelectButton\r\n *\r\n * @param content : 버튼에 들어갈 내용, optional, 기본값 공백\r\n * @param width : 너비, optional\r\n * @param height: 높이, optional\r\n * @param fontSize: 폰트 사이즈, optional\r\n * @param onClick\r\n *\r\n * @param transparent: 일반 Button일 때 투명 여부, optional, 기본값 false\r\n *\r\n * @param value: SelectButton일 때 가지고 있는 값\r\n * @param initialText: 선택되어 있는 값\r\n */\r\n\r\ninterface DefaultProps {\r\n  content?: string;\r\n  width?: number;\r\n  height?: number;\r\n  fontSize?: number;\r\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\ninterface NormalButtonProps extends DefaultProps {\r\n  transparent?: boolean;\r\n}\r\ninterface SelectButtonProps extends DefaultProps {\r\n  value?: string | number;\r\n  initialText?: string;\r\n}\r\n\r\nexport const Button: FunctionComponent<NormalButtonProps> = ({\r\n  content,\r\n  width,\r\n  height,\r\n  fontSize,\r\n  onClick,\r\n  transparent,\r\n}) => {\r\n  return (\r\n    <NormalButtonStyles\r\n      width={width}\r\n      height={height}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      transparent={transparent}\r\n    >\r\n      {content}\r\n    </NormalButtonStyles>\r\n  );\r\n};\r\n\r\nexport const SelectButton: FunctionComponent<SelectButtonProps> = ({\r\n  content,\r\n  width,\r\n  height,\r\n  fontSize,\r\n  onClick,\r\n  value,\r\n  initialText,\r\n}) => {\r\n  const selectButtonStyle = {\r\n    background: `${initialText === value ? \"#d35e43\" : \"#c4c4c4\"}`,\r\n  };\r\n\r\n  return (\r\n    <SelectButtonStyles\r\n      width={width}\r\n      height={height}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      value={value}\r\n      style={selectButtonStyle}\r\n    >\r\n      {content}\r\n    </SelectButtonStyles>\r\n  );\r\n};\r\n\r\n// default Props\r\nButton.defaultProps = {\r\n  width: 175,\r\n  height: 32,\r\n  fontSize: 18,\r\n  content: \"\",\r\n  transparent: false,\r\n};\r\nSelectButton.defaultProps = {\r\n  width: 272,\r\n  height: 50,\r\n  fontSize: 18,\r\n  content: \"\",\r\n  value: \"\",\r\n};\r\n\r\nconst styles = (props: DefaultProps) => css`\r\n  & {\r\n    width: ${props.width}px;\r\n    max-width: 95%;\r\n    height: ${props.height}px;\r\n    border-radius: ${props.height ? props.height / 2 : 0}px;\r\n    border: none;\r\n    cursor: pointer;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    color: white;\r\n\r\n    font-size: ${props.fontSize}px;\r\n    font-weight: 500;\r\n    line-height: ${props.height ? props.height * 0.9 : 0}px;\r\n  }\r\n`;\r\n\r\nconst NormalButtonStyles = styled.button<NormalButtonProps>`\r\n  ${styles}\r\n  & {\r\n    background: rgba(\r\n      201,\r\n      91,\r\n      66,\r\n      ${(props: NormalButtonProps) => (props.transparent ? 0.5 : 1)}\r\n    );\r\n    border: ${(props: NormalButtonProps) =>\r\n      props.transparent ? \"2px solid black\" : \"none\"};\r\n    ${(props: NormalButtonProps) => (props.transparent ? \"color: black;\" : \"\")}\r\n    margin-bottom: 14px;\r\n  }\r\n`;\r\nconst SelectButtonStyles = styled.button<DefaultProps>`\r\n  ${styles}\r\n  & {\r\n    margin: 5px;\r\n  }\r\n  &:hover {\r\n    background: #d35e43;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { FinalImagePropsType } from \"../../types\";\r\nimport styled from \"styled-components\";\r\nimport { SelectPage } from \"../template/SelectPage\";\r\nimport { SelectButton } from \"../atoms/Button/Button\";\r\n\r\nexport default function FifthPage({\r\n  finalImage,\r\n  setImage,\r\n}: FinalImagePropsType) {\r\n  const [SelectedText, setSelecedText] = useState<string>(finalImage.resultText);\r\n\r\n  const onSelectText = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setSelecedText(e.currentTarget.value);\r\n    setImage({ ...finalImage, resultText: e.currentTarget.value });\r\n  };\r\n\r\n  const BUTTON_ARRAY = [\r\n    \"미얀마와 함께 입을 연대\",\r\n    \"우리의 목소리로 지켜봐\",\r\n    \"You are not Alone\",\r\n    \"STOP KILLING\",\r\n    \"선택하지 않고 넘어가기\",\r\n  ];\r\n\r\n  return (\r\n    <SelectPage\r\n      progress={80}\r\n      first={false}\r\n      contentNumber={\"Q4\"}\r\n      title1={\"티셔츠에 적을\"}\r\n      title2={\"문구를 선택해주세요\"}\r\n      buttonContent={\"다 골랐어요!\"}\r\n      buttonLink={\"/result\"}\r\n      backButton={\"/fourth\"}\r\n      disabled={SelectedText.length<=0}\r\n    >\r\n      <TextList>\r\n        {BUTTON_ARRAY.map((text, index) => (\r\n          <li key={index}>\r\n            <SelectButton\r\n              initialText={SelectedText}\r\n              content={text}\r\n              value={index!==BUTTON_ARRAY.length-1 ? `text-${index + 1}` : \"none\"}\r\n              onClick={onSelectText}\r\n            />\r\n          </li>\r\n        ))}\r\n      </TextList>\r\n    </SelectPage>\r\n  );\r\n}\r\n\r\nconst TextList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  list-style: none;\r\n\r\n  & li {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 원형의 아이콘 버튼\r\n *\r\n * @param icon : 들어갈 아이콘 이름, 기본값 facebook\r\n * @param width : 너비, optional, 기본값 57\r\n * @param onClick : 버튼 누르면 호출될 콜백 함수, optional\r\n * 원형이기 때문에 height 옵션은 없습니다.\r\n */\r\ninterface ButtonProps {\r\n  icon?: string;\r\n  width?: number;\r\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst styles = (props: ButtonProps) => css`\r\n  & {\r\n    width: ${props.width}px;\r\n    height: ${props.width}px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    cursor: pointer;\r\n    position: relative;\r\n    background: transparent;\r\n    margin: 5px;\r\n    z-index: 1;\r\n  }\r\n  &:after,\r\n  &:before {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n  }\r\n  &:after {\r\n    border: 2px solid black;\r\n    box-sizing: border-box;\r\n    background: url(\"images/icon/${props.icon}.svg\") no-repeat;\r\n    background-size: ${props.icon===\"link\" ? \"50%\" : \"70%\"};\r\n    background-position: center;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n  }\r\n  &:before {\r\n    background-color: rgba(211, 94, 67, 0.44);\r\n    top: 4px;\r\n    left: 3px;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst OffsetButtonStyles = styled.button<ButtonProps>`\r\n  ${styles}\r\n`;\r\n\r\nexport const OffsetIconButton: FunctionComponent<ButtonProps> = (props) => {\r\n  return <OffsetButtonStyles {...props} id={props.icon} />;\r\n};\r\n\r\n// default Props\r\nOffsetIconButton.defaultProps = {\r\n  width: 57,\r\n  icon: \"facebook\",\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport Konva from \"konva\";\r\nimport styled, { css } from \"styled-components\";\r\n// Written By HU-Lee\r\n\r\n/**\r\n * @summary 정사각형 형태의 이미지 틀\r\n *\r\n * @param src : 이미지 주소의 배열\r\n * @param width : 너비, optional, 기본값 300\r\n * @param scale : 확대 축소 비율\r\n * @param index : 캔버스 구분용 번호\r\n */\r\n\r\nconst styles = (props) => css`\r\n  & {\r\n    width: ${props.width}px;\r\n    height: ${props.width}px;\r\n    border: 4px solid black;\r\n    background: white;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    transform: scale(${props.scale});\r\n    margin: 30px;\r\n  }\r\n`;\r\n\r\nconst WrapperStyles = styled.div`\r\n  ${styles}\r\n`;\r\n\r\nexport const NewCanvasImage = (props) => {\r\n\r\n  const [Uri, setUri] = useState()\r\n \r\n  const AddImages = async (srcs, layer) => {\r\n    return new Promise((resolve, reject) => {\r\n        const src = srcs.shift()\r\n        const path = `../../images/result/${src}.png`\r\n        const imageObj = new Image();\r\n        imageObj.src = path;\r\n        imageObj.onload = function () {\r\n            const part = new Konva.Image({\r\n              image: imageObj,\r\n              width: props.width,\r\n              height: props.width,\r\n              preventDefault: false,\r\n            });\r\n            // add the shape to the layer\r\n            layer.add(part);\r\n            setTimeout(() => {\r\n                if (srcs.length > 0) {\r\n                    resolve(AddImages(srcs, layer))\r\n                } else {\r\n                    resolve(layer.getCanvas().toDataURL())\r\n                }\r\n            }, 50)\r\n        };\r\n        imageObj.onerror = () => {\r\n            reject()\r\n        }\r\n    })    \r\n  };\r\n\r\n  const exportFile = () => {\r\n    const check = window.confirm(\"다운로드할까요?\");\r\n    if (check) {\r\n      let link = document.createElement(\"a\");\r\n      link.download = \"미얀마.png\";\r\n      link.href = Uri;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchMyData(srcs, layer) {\r\n        const res = await AddImages(srcs, layer)\r\n        setUri(res)\r\n    }\r\n    const stage = new Konva.Stage({\r\n      container: `container-${props.index}`,\r\n      width: props.width,\r\n      height: props.width,\r\n      preventDefault: false,\r\n    });\r\n    const layer = new Konva.Layer();\r\n    stage.add(layer);\r\n    fetchMyData(props.src, layer)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"good\")\r\n    // console.log(Path)\r\n  }, [Uri])\r\n\r\n  return (\r\n    <WrapperStyles {...props} className=\"wrapper\">\r\n      <img src={Uri} width={300} height={300} onClick={exportFile} alt=\"result\"/>\r\n      <div id={`container-${props.index}`} hidden={true}/>\r\n    </WrapperStyles>\r\n  );\r\n};\r\n\r\n// default Props\r\nNewCanvasImage.defaultProps = {\r\n  width: 300,\r\n  scale: window.innerWidth > 300 ? 1 : 0.8,\r\n  src: [\"hair-1\"],\r\n  index: 1,\r\n};\r\n","import { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FinalImageType } from \"../../types\";\r\nimport { Background } from \"../atoms/Background\";\r\nimport { Button } from \"../atoms/Button/Button\";\r\nimport { OffsetButton, OffsetLinkButton } from \"../atoms/Button/OffsetButton\";\r\nimport { OffsetIconButton } from \"../atoms/Button/OffsetIconButton\";\r\nimport { CanvasImage } from \"../atoms/CanvasImage\";\r\nimport { Container } from \"../atoms/Container/Container\";\r\nimport useWindowDimensions from \"../atoms/hooks/useWindowDimensions\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { useState } from \"react\";\r\nimport { ProgressBar } from \"../atoms/ProgressBar\";\r\nimport { SimpleBar } from \"../atoms/SimpleBar\";\r\nimport { NewCanvasImage } from \"../atoms/NewCanvasImage\";\r\n\r\nconst MyAlert = withReactContent(Swal);\r\n\r\nconst shareText = \"미얀마와 함께 입을 연대\";\r\nconst shareSubText = \"미얀마를 위해 지금 우리가 할 수 있는 일\";\r\nconst shareTag = \"#미얀마와함께입을연대 #im_with_myanmar #savemyanmar\";\r\nconst shareUrl = \"https://withmyanmar.co.kr/\";\r\nconst FeedUrl = \"https://www.instagram.com/explore/tags/%EB%AF%B8%EC%96%80%EB%A7%88%EC%99%80%EC%9E%85%EC%9D%84%ED%95%A8%EA%BB%98%EC%97%B0%EB%8C%80/\"\r\n\r\nexport default function ResultPage(props: FinalImageType) {\r\n\r\n  const { width } = useWindowDimensions();\r\n  const [Loading, setLoading] = useState<boolean>(true);\r\n  const scale = width > 350 ? 1 : 0.8;\r\n  const imgArr = [\r\n    \"background-white\",\r\n    \"body\",\r\n    props.firstFile,\r\n    props.secondFile,\r\n    props.thirdFile,\r\n    props.resultText,\r\n    // \"1px\"\r\n  ].filter(a => a !== \"none\");\r\n\r\n  window.history.pushState(null, \"result\", window.location.href);\r\n  window.onpopstate = () => {\r\n    window.history.go(1);\r\n  };\r\n\r\n  const copyClip = () => {\r\n    const temp = document.createElement(\"textarea\");\r\n    temp.value = shareTag;\r\n    document.body.appendChild(temp);\r\n\r\n    temp.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(temp);\r\n    MyAlert.fire({\r\n      text: \"해시태그가 복사되었습니다\",\r\n      width: 280,\r\n      timer: 2000,\r\n      showConfirmButton: false,\r\n      timerProgressBar: true,\r\n      backdrop: \"none\",\r\n      customClass: {\r\n        popup: \"alert\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const copyLink = () => {\r\n    const temp = document.createElement(\"textarea\");\r\n    temp.value = shareUrl;\r\n    document.body.appendChild(temp);\r\n\r\n    temp.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(temp);\r\n    MyAlert.fire({\r\n      text: \"링크가 복사되었습니다\",\r\n      width: 280,\r\n      timer: 2000,\r\n      showConfirmButton: false,\r\n      timerProgressBar: true,\r\n      backdrop: \"none\",\r\n      customClass: {\r\n        popup: \"alert\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const shareTwitter = () => {\r\n    window.open(\r\n      \"https://twitter.com/intent/tweet?text=\" + shareText + \" - \" + shareSubText + \"&url=\" + shareUrl\r\n    );\r\n  };\r\n\r\n  const shareFacebook = () => {\r\n    window.open(\"http://www.facebook.com/sharer/sharer.php?u=\" + shareUrl);\r\n  };\r\n\r\n  const backToHome = () => {\r\n    window.location.href = \"/\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!Kakao.isInitialized()) {\r\n      Kakao.init(process.env.REACT_APP_KAKAO_API_KEY);\r\n    }\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 5000);\r\n    imgArr.forEach((image) => {\r\n      new Image().src = `../../images/result/${image}.png`\r\n    })\r\n    new Image().src = \"../../images/insta_tag_sample.jpeg\"\r\n    new Image().src = \"../../images/group.png\"\r\n    if(!Loading) {\r\n      Kakao.Link.createDefaultButton({\r\n        container: \"#kakaotalk\",\r\n        objectType: \"feed\",\r\n        content: {\r\n          title: shareText,\r\n          description: shareSubText,\r\n          imageUrl: \"\",\r\n          link: { mobileWebUrl: shareUrl, webUrl: shareUrl },\r\n        },\r\n        buttons: [\r\n          {\r\n            title: \"지금 확인하기\",\r\n            link: { mobileWebUrl: shareUrl, webUrl: shareUrl },\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  });\r\n\r\n  const LoadingComponent = (\r\n    <Container offset>\r\n      <ContentsWrapper>\r\n        <img\r\n          src=\"../../images/font/mapssi/loading.svg\"\r\n          alt=\"loading\"\r\n          width={250}\r\n        />\r\n        <ImagePencil src=\"../../images/pencil.svg\" />\r\n        <Message>캐릭터를 열심히 그리고 있어요!</Message>\r\n        <ProgressBar animated={true} />\r\n      </ContentsWrapper>\r\n    </Container>\r\n  )\r\n\r\n  const ResultComponent = (\r\n    <Container offset>\r\n      <img\r\n        src={`../../images/font/mapssi/완성.svg`}\r\n        width={88}\r\n        alt=\"완성\"\r\n        style={{ marginTop: 50 }}\r\n      />\r\n      <TextBox>\r\n        <h1 className=\"first_line\">함께 목소리를 낼 캐릭터 완성!</h1>\r\n        <h1 className=\"second_line\" style={{marginTop:1}}>이제 온라인 시위에 참여해 볼까요?</h1>\r\n      </TextBox>\r\n      {/* <CanvasImage scale={scale} src={imgArr} /> */}\r\n      <NewCanvasImage scale={scale} src={imgArr} />\r\n      <Button content=\"STEP 1\" transparent={true} width={120}/>\r\n      <TextBox>\r\n        <h1 className=\"first_line\">이미지를 꾹 눌러 저장해 주세요!</h1>\r\n      </TextBox>\r\n      <br />\r\n      <ImgStyles scale={scale} src=\"../../images/insta_tag_sample.jpeg\" />\r\n      <Button content=\"STEP 2\" transparent={true} width={120} />\r\n      <TextBox style={{ marginBottom: 20 }}>\r\n        <h1 className=\"first_line\">\r\n          캐릭터 입에 계정 태그 <br />(<b>@im_with_myanmar</b>)를 달아\r\n          <br />\r\n          인스타그램에 업로드해 주세요! <br />\r\n          말풍선 태그가 되어 사람들에게 <br />\r\n          연대의 목소리가 전해집니다.\r\n        </h1>\r\n      </TextBox>\r\n      <br />\r\n      <Button content=\"#미얀마와함께입을연대\" fontSize={13} />\r\n      <Button content=\"#im_with_myanmar\" fontSize={13} />\r\n      <Button content=\"#savemyanmar\" fontSize={13} width={135} />\r\n      <TextBox style={{ marginBottom: 20 }}>\r\n        <h1 className=\"first_line\">해시태그와 함께 업로드하고,</h1>\r\n        <h1 className=\"second_line\">\r\n          온라인 시위 행렬에 <br />\r\n          동참해 주세요\r\n        </h1>\r\n      </TextBox>\r\n      <OffsetButton content=\"해시태그 복사하기\" onClick={copyClip} />\r\n      <br />\r\n      <ImgStyles scale={scale} src=\"../../images/group.png\" />\r\n      <TextBox style={{ marginBottom: 20 }}>\r\n        <h1 className=\"first_line\">\r\n          함께하는 사람들이 이곳에 있어요. <br />\r\n          우리가 만들어낸 연대의 힘,\r\n        </h1>\r\n        <h1 className=\"second_line\">지금 확인해 보세요!</h1>\r\n      </TextBox>\r\n      <OffsetLinkButton\r\n        content=\"피드 확인하기\"\r\n        link={FeedUrl}\r\n      />\r\n      <br />\r\n      <TextBox style={{ marginBottom: 50, marginTop: 50 }}>\r\n        <h1 className=\"first_line\">\r\n          다시 한번 캐릭터를 만들거나 <br />\r\n          친구에게도 캠페인을 알려주세요!\r\n        </h1>\r\n      </TextBox>\r\n      <OffsetButton content=\"처음으로 돌아가기\" onClick={backToHome}/>\r\n      <br />\r\n      <IconContainer>\r\n        <OffsetIconButton onClick={shareFacebook} />\r\n        <OffsetIconButton icon=\"link\" onClick={copyLink}/>\r\n        <OffsetIconButton icon=\"kakaotalk\" />\r\n        <OffsetIconButton icon=\"twitter\" onClick={shareTwitter} />\r\n      </IconContainer>\r\n      <br />\r\n      <SimpleBar style={{height:1, marginTop: 20, maxWidth:320}}/>\r\n      <Credit><b>우리가 만들었어요!</b></Credit>\r\n      <TextBox style={{textAlign: 'center'}}>\r\n        <b>기획</b>\r\n        <p>박정욱, 유진</p>\r\n        <b>디자인</b>\r\n        <p>박연우, 박세아</p>\r\n        <b>개발 제작</b>\r\n        <p>J2KB (이현욱, 이지원, 김창민)</p>\r\n      </TextBox>\r\n    </Container>\r\n  )\r\n\r\n  return (\r\n    <Background>\r\n      <Header>\r\n        <h2>함께 입을 연대</h2>\r\n      </Header>\r\n      {Loading ? LoadingComponent : ResultComponent}\r\n    </Background>\r\n  );\r\n}\r\n\r\nconst Header = styled.header`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  h2 {\r\n    font-family: Malssami815;\r\n    padding: 8px 0;\r\n  }\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  margin-top: 10px;\r\n  line-height: 1.4rem;\r\n\r\n  p {\r\n    font-size: 16px;\r\n    margin-top: 0;\r\n    font-family: S-CoreDreamLight;\r\n    font-weight: 300;\r\n  }\r\n\r\n  b {\r\n    font-size: 14px;\r\n    font-family: S-CoreDream;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0;\r\n    padding: 0;\r\n    text-align: center;\r\n  }\r\n\r\n  .first_line {\r\n    font-size: 1.1rem;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .second_line {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .first_line + .second_line {\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n\r\ninterface ImgProps {\r\n  scale: number;\r\n}\r\n\r\nconst ImgStyles = styled.img<ImgProps>`\r\n  & {\r\n    width: 300px;\r\n    height: 300px;\r\n    border: 4px solid black;\r\n    background: white;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    transform: scale(${(props: ImgProps) => props.scale});\r\n    margin: 30px;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ImagePencil = styled.img`\r\n  width: 72px;\r\n  margin-left: 50px;\r\n  margin-bottom: 70px;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  font-family: RixAcasia;\r\n  font-size: 19px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n`;\r\n\r\nconst ContentsWrapper = styled.div`\r\n  width: 100%;\r\n  margin-top: 170px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Credit = styled.div`\r\n  width: 266px;\r\n  height: 36px;\r\n  border-radius: 18px;\r\n  background-color: rgba(219, 167, 155, 0.44);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 25px;\r\n`","import { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport {\r\n  FirstPage,\r\n  SecondPage,\r\n  ThirdPage,\r\n  FourthPage,\r\n  FifthPage,\r\n} from \"./components/screens\";\r\nimport { FinalImageType } from \"./types\";\r\n\r\nimport ResultPage from \"./components/screens/ResultPage\";\r\n\r\nfunction App() {\r\n  const [finalImage, setImage] = useState<FinalImageType>({\r\n    firstFile: \"\",\r\n    secondFile: \"\",\r\n    thirdFile: \"\",\r\n    resultText: \"\",\r\n  });\r\n\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={() => <FirstPage />} />\r\n      <Route\r\n        exact\r\n        path=\"/second\"\r\n        component={() => (\r\n          <SecondPage finalImage={finalImage} setImage={setImage} />\r\n        )}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/third\"\r\n        component={() => (\r\n          <ThirdPage finalImage={finalImage} setImage={setImage} />\r\n        )}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/fourth\"\r\n        component={() => (\r\n          <FourthPage finalImage={finalImage} setImage={setImage} />\r\n        )}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/fifth\"\r\n        component={() => (\r\n          <FifthPage finalImage={finalImage} setImage={setImage} />\r\n        )}\r\n      />\r\n      {/* <Route exact path=\"/loading\" component={() => <LoadingPage />} /> */}\r\n      <Route\r\n        exact\r\n        path=\"/result\"\r\n        component={() => <ResultPage {...finalImage} />}\r\n      />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}